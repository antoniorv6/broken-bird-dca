name: Build Debian Package

on:
  push:
    tags:
      - 'v*.*.*'  # Se activa con etiquetas como v1.0.0, v2.1.3, etc.

jobs:
  build-deb:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necesario para obtener todo el historial y las etiquetas

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper ccache libx11-dev libgl1-mesa-dev xorg-dev

      - name: Get version from tag
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Building version: $VERSION"

      - name: Build Debian package with make dist
        run: |
          make dist
          echo "Build completed!"

      - name: Find generated .deb files
        id: find_deb
        run: |
          DEB_FILE=$(find . -name "*.deb" -type f | head -n 1)
          if [ -z "$DEB_FILE" ]; then
            echo "Error: No .deb file found!"
            exit 1
          fi
          echo "deb_file=$DEB_FILE" >> $GITHUB_OUTPUT
          echo "deb_name=$(basename $DEB_FILE)" >> $GITHUB_OUTPUT
          echo "Found: $DEB_FILE"
          ls -lh *.deb 2>/dev/null || ls -lh $DEB_FILE

      - name: Create Release
        id: create_release
        uses: comnoco/create-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false
          
      - name: Upload .deb to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.find_deb.outputs.deb_file }}
          asset_name: ${{ steps.find_deb.outputs.deb_name }}
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload .deb as artifact
        uses: actions/upload-artifact@v4
        with:
          name: debian-package
          path: "*.deb"
          retention-days: 90
